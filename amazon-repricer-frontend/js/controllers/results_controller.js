// Generated by CoffeeScript 1.8.0
(function() {
  var ResultSetController, ResultsController, utils;

  utils = require('../utils/utils');

  ResultSetController = require('./result_set_controller');

  ResultsController = ResultSetController.extend({
    selectedResultsMatchDisplayed: (function() {
      return this.get('resultSetName') === this.get('selectedResult');
    }).property('resultSetName', 'selectedResult'),
    resultSetName: '',
    minPrices: {
      '3C': '',
      '4C': '',
      '6C': '',
      '8C': '',
      '9C': '',
      '12C': '',
      '3CO': '',
      '4CO': '',
      '6CO': '',
      '8CO': '',
      '9CO': '',
      '12CO': ''
    },
    actions: {
      showResultsButtonPressed: (function() {
        var topContext;
        topContext = this;
        this.set('resultSetName', this.get('selectedResult'));
        console.log('SHOW RESULT PRESSED');
        return utils.get_url('http://' + utils.BACKEND_URL + '/results_for_name/' + this.get('resultSetName')).then(function(ret) {
          var parsedResult;
          parsedResult = $.parseJSON(ret);
          topContext.set('finalCleanedList', parsedResult[0].results);
          topContext.set('minPrices', parsedResult[0].min_prices);
          topContext.set('skuPrefix', parsedResult[0].sku_prefix);
          topContext.set('discountPercent', parsedResult[0].discount_percent);
          topContext.set('minimumPrice', parsedResult[0].minimum_price);
          return topContext._setPage(0);
        });
      }),
      deleteButtonPressed: (function() {
        alert('This button is not yet implemented.');
        console.log('DELETE RESULT PRESSED');
        return console.log(this.get('selectedResult'));
      })
    }
  });

  module.exports = ResultsController;

}).call(this);
